<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>IIR滤波器</title>
    <url>/2021/10/24/IIR%E6%BB%A4%E6%B3%A2%E5%99%A8/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>money</title>
    <url>/2021/10/23/money/</url>
    <content><![CDATA[<p>每两周记录，打板短线操作</p>
<p><u>date: 2021-10-11 至 2021-10-22</u></p>
<span id="more"></span>
<h1 id="国庆后10-11至10-15日"><a class="header-anchor" href="#国庆后10-11至10-15日">¶</a> 国庆后10-11至10-15日</h1>
<h2 id="国庆节前最后一天上海建工"><a class="header-anchor" href="#国庆节前最后一天：上海建工">¶</a> 国庆节前最后一天：上海建工</h2>
<p>  因为前一天涨停，趋势不错，当天进去2400股，周五收盘<font color="red"> +88</font>。但是国庆节后惨遭地板。于10-11日割肉走人。累计<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mstyle mathcolor="green"><mo>−</mo><mn>1</mn><mn>8</mn><mn>0</mn><mn>1</mn><mi mathvariant="normal">.</mi><mn>6</mn><mn>1</mn></mstyle></mrow><annotation encoding="application/x-tex">\color{green}{-1801.61}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="base textstyle uncramped"><span class="mord" style="color:green;">−</span><span class="mord mathrm" style="color:green;">1</span><span class="mord mathrm" style="color:green;">8</span><span class="mord mathrm" style="color:green;">0</span><span class="mord mathrm" style="color:green;">1</span><span class="mord mathrm" style="color:green;">.</span><span class="mord mathrm" style="color:green;">6</span><span class="mord mathrm" style="color:green;">1</span></span></span></span>。</p>
<p><img src="/2021/10/23/money/%E4%B8%8A%E6%B5%B7%E5%BB%BA%E5%B7%A51.jpg" alt="上海建工"></p>
<p><img src="/2021/10/23/money/%E4%B8%8A%E6%B5%B7%E5%BB%BA%E5%B7%A52.jpg" alt="上海建工"></p>
<h2 id="10-11至10-12国电南自"><a class="header-anchor" href="#10-11至10-12：国电南自。">¶</a> 10-11至10-12：国电南自。</h2>
<p>  这个我看到在地板上反复“翘板”，买入300股，12号直接按在地板，割肉走人，累计<font color="green"> -222.97</font>。</p>
<p><img src="/2021/10/23/money/%E5%9B%BD%E7%94%B5%E5%8D%97%E8%87%AA.jpg" alt="国电南自"></p>
<h2 id="10-12至10-13长飞光纤"><a class="header-anchor" href="#10-12至10-13：长飞光纤">¶</a> 10-12至10-13：长飞光纤</h2>
<p>  于第一板后一天买入200股，当天收获涨停，第二天卖出。累计<font color="red"> +432.76</font>。终于有了起色！</p>
<p><img src="/2021/10/23/money/%E9%95%BF%E9%A3%9E%E5%85%89%E7%BA%A4.jpg" alt="长飞光纤"></p>
<h2 id="10-11至10-13中兵红箭"><a class="header-anchor" href="#10-11至10-13：中兵红箭">¶</a> 10-11至10-13：中兵红箭</h2>
<p>  从11日就反复买过很多次，13号卖出，卖出后5分钟涨停，之后错过25个点，十分可惜，但没亏还算不错！累计<font color="red"> +139.34</font>。</p>
<p><img src="/2021/10/23/money/%E4%B8%AD%E5%85%B5%E7%BA%A2%E7%AE%AD1.jpg" alt="中兵红箭"></p>
<p><img src="/2021/10/23/money/%E4%B8%AD%E5%85%B5%E7%BA%A2%E7%AE%AD2.jpg" alt="中兵红箭"></p>
<h2 id="10-14露笑科技"><a class="header-anchor" href="#10-14：露笑科技">¶</a> 10-14：露笑科技</h2>
<p>    买入后只做了个小T，赚了一点点。</p>
<h1 id="10-18至10-22日"><a class="header-anchor" href="#10-18至10-22日">¶</a> 10-18至10-22日</h1>
<h2 id="10-18露笑科技"><a class="header-anchor" href="#10-18：露笑科技">¶</a> 10-18：露笑科技</h2>
<p>  清掉露笑科技300股，累计<font color="red"> +118.32</font> 。卖出后（T+4）上涨15.15%。</p>
<p><img src="/2021/10/23/money/%E9%9C%B2%E7%AC%91%E7%A7%91%E6%8A%80.jpg" alt="露笑科技"></p>
<h2 id="10-18至10-19上海贝岭"><a class="header-anchor" href="#10-18至10-19：上海贝岭">¶</a> 10-18至10-19：上海贝岭</h2>
<p>  横盘，直接卖了，没什么意思，但也错过了22日的5%。累计<font color="green">&nbsp;-40.61</font> 。</p>
<p><img src="/2021/10/23/money/%E4%B8%8A%E6%B5%B7%E8%B4%9D%E5%B2%AD.jpg" alt="上海贝岭"></p>
<h2 id="10-20至10-21凤凰光学"><a class="header-anchor" href="#10-20至10-21：凤凰光学">¶</a> 10-20至10-21：凤凰光学</h2>
<p>  9天9板，于20日开板，随后打板成功，随后一天21日反复炸板，卖出，累计<font color="red"> +406.44</font> 。</p>
<p><img src="/2021/10/23/money/%E5%87%A4%E5%87%B0%E5%85%89%E5%AD%A6.jpg" alt="凤凰光学"></p>
<h2 id="10-19至10-21江特电机"><a class="header-anchor" href="#10-19至10-21：江特电机">¶</a> 10-19至10-21：江特电机</h2>
<p>  19日买入200股，10%个点没卖，6.7%卖了，累计<font color="red"> +291.34</font> 。</p>
<p><img src="/2021/10/23/money/%E6%B1%9F%E7%89%B9%E7%94%B5%E6%9C%BA.jpg" alt="江特电机"></p>
<h2 id="10-19至10-21闽东电力"><a class="header-anchor" href="#10-19至10-21：闽东电力">¶</a> 10-19至10-21：闽东电力</h2>
<p>  打板入300股，第二天封板，第三天回落卖出，本来13%，最后8%收尾，还是贪了。累计<font color="red"> +401.53</font>。</p>
<p><img src="/2021/10/23/money/%E9%97%BD%E4%B8%9C%E7%94%B5%E5%8A%9B.jpg" alt="闽东电力"></p>
<h2 id="10-21至10-22圆通速递"><a class="header-anchor" href="#10-21至10-22：圆通速递">¶</a> 10-21至10-22：圆通速递</h2>
<p>  打板入手400股，第二天起晚了了没吃到溢价，果断走人水下割肉。累计<font color="green">&nbsp;-192.14</font> 。</p>
<p><img src="/2021/10/23/money/%E5%9C%86%E9%80%9A%E9%80%9F%E9%80%92.jpg" alt="圆通速递"></p>
<h2 id="10-19至10-22豫能控股"><a class="header-anchor" href="#10-19至10-22：豫能控股">¶</a> 10-19至10-22：豫能控股</h2>
<p>  每天织布，浮动最高100多，但22日-4.53%，趋势走坏果断走人。累计<font color="green">&nbsp;-99.15</font> 。</p>
<p><img src="/2021/10/23/money/%E8%B1%AB%E8%83%BD%E6%8E%A7%E8%82%A1.jpg" alt="豫能控股"></p>
<h1 id="结算"><a class="header-anchor" href="#结算">¶</a> 结算</h1>
<p>  <strong>除了电建翻车其他都还好，操作是对的，该走就走，不要留念，不要犹豫！！！！！</strong></p>
<p><img src="/2021/10/23/money/%E7%BB%93%E7%AE%97.jpg" alt="结算"></p>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
      <categories>
        <category>money</category>
      </categories>
      <tags>
        <tag>money</tag>
      </tags>
  </entry>
  <entry>
    <title>学习记录-1</title>
    <url>/2021/10/19/%E7%8A%B6%E6%80%81%E6%9C%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<p><em><strong>状态机在FPGA设计中具有十分重要的地位，可以实现类似单片机一样的按一定流程“执行”，最后用一个例程来说明。。</strong></em></p>
<span id="more"></span>
<h1 id="状态机的定义"><a class="header-anchor" href="#状态机的定义">¶</a> 状态机的定义</h1>
<p>  <strong>状态机</strong>就是将一个复杂的问题分为很多个步骤，这一步做好了才能去到下一步。比如说实现一个i2c协议发送单字节数据过程，第一步是发送地址；第二步是等待应答，应答成功后进入第三部发送寄存器地址，失败则回到空闲态，然后再次等待发送信号；第四步也是等待应答，应带成功进入第五步发送一个字节数据，失败则返回空闲态，然后等待发送信号，从头开始；第六步等待应答，应答成功则发送stop信号，然后回到空闲态，等下一个发送信号，失败则回到空闲态等发送信号。当然，可以加入发送失败标志判断是否需要重新发送。</p>
<h1 id="状态机的描述方法"><a class="header-anchor" href="#状态机的描述方法">¶</a> 状态机的描述方法</h1>
<table>
<thead>
<tr>
<th style="text-align:right">类型</th>
<th style="text-align:center">描述方法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">一段式</td>
<td style="text-align:center">整个状态机写到一个always模块里面，在该模块中既描述状态转移，又描述状态的输入和输出；</td>
</tr>
<tr>
<td style="text-align:right">二段式</td>
<td style="text-align:center">用两个always模块来描述状态机，其中一个always模块采用同步时序描述状态转移；另一个模块采用组合逻辑判断状态转移条件，描述状态转移规律以及输出；</td>
</tr>
<tr>
<td style="text-align:right">三段式</td>
<td style="text-align:center">在两个always模块描述方法基础上，使用三个always模块，一个always模块采用同步时序描述状态转移，一个always采用组合逻辑判断状态转移条件，描述状态转移规律，另一个always模块描述状态输出(可以用组合电路输出，也可以时序电路输出)。</td>
</tr>
</tbody>
</table>
<center><font color="#dd00dd">二段式状态机的示例如下：</font><br></center> 
<figure class="highlight verilog"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 第一个进程，同步时序always模块，格式化描述次态寄存器迁移到现态寄存器</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n)</span><br><span class="line">        curr_state &lt;= INIT;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        curr_state &lt;= next_state; <span class="comment">// 注意，使用的是非阻塞赋值</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二个进程，采用组合逻辑判断状态转移条件，描述状态转移规律以及输出</span></span><br><span class="line"><span class="keyword">always</span> @ (*) <span class="keyword">begin</span>	      <span class="comment">//电平触发,组合逻辑</span></span><br><span class="line">	<span class="keyword">case</span>(current_state)</span><br><span class="line">		S1: </span><br><span class="line">            <span class="keyword">if</span>(...)</span><br><span class="line">            	<span class="keyword">begin</span></span><br><span class="line">                    data_out = ...;</span><br><span class="line">                    next_state = S2; <span class="comment">//阻塞赋值</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    data_out = ...;</span><br><span class="line">                    next_state = S1; <span class="comment">//阻塞赋值</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">		...:</span><br><span class="line">	<span class="keyword">endcase</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></tbody></table></figure>
<center><font color="#dd00dd">三段式状态机的示例如下：</font><br></center> 
<figure class="highlight verilog"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 第一个进程，同步时序always模块，格式化描述次态寄存器迁移到现态寄存器</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n)</span><br><span class="line">        curr_state &lt;= INIT;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        curr_state &lt;= next_state;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二个进程，组合逻辑always模块，描述状态转移条件判断</span></span><br><span class="line"><span class="keyword">always</span> @ (*) <span class="keyword">begin</span>	      <span class="comment">//电平触发,组合逻辑</span></span><br><span class="line">	<span class="keyword">case</span>(current_state)</span><br><span class="line">		S1: </span><br><span class="line">            <span class="keyword">if</span>(...)</span><br><span class="line">            	<span class="keyword">begin</span></span><br><span class="line">                    ...;             <span class="comment">//一些条件的判断</span></span><br><span class="line">                    next_state = S2; <span class="comment">//阻塞赋值</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    ...;             <span class="comment">//一些条件的判断</span></span><br><span class="line">                    next_state = S1; <span class="comment">//阻塞赋值</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">		...:</span><br><span class="line">	<span class="keyword">endcase</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            ...;                  <span class="comment">//初始化</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">        	<span class="keyword">case</span>(next_state)</span><br><span class="line">            	S1:</span><br><span class="line">                    out1 &lt;= <span class="number">1'b1</span>; <span class="comment">//注意是非阻塞逻辑</span></span><br><span class="line">                S2:</span><br><span class="line">                    out2 &lt;= <span class="number">1'b1</span>;</span><br><span class="line">                <span class="keyword">default</span>:...;</span><br><span class="line">            <span class="keyword">endcase</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></tbody></table></figure>
<center><font color="#dd00dd">两段式有限状态机与三段式有限状态机的区别</font><br></center> 
<p>  <font color="#dd0000">FSM将时序部分（状态转移部分）和组合部分（判断状态转移条件和产生输出）分开，写为两个always语句，即为两段式有限状态机。将组合部分中的判断状态转移条件和产生输入再分开写，则为三段式有限状态机。<strong>二段式在组合逻辑特别复杂时适用，但要注意需在后面加一个触发器以消除组合逻辑对输出产生的毛刺。三段式没有这个问题，由于第三个always会生成触发器。</strong></font><br></p>
<h1 id="自动售货机示例"><a class="header-anchor" href="#自动售货机示例">¶</a> 自动售货机示例</h1>
<p>  两种货物的情况：为6元的货物，只接受1元和5元的货币，当接受的钱足够时，会吐出货物。当在60个时钟周期内没投够6元时，自动回到初始状态，重新选择货物。货物每出货一个，总数减1，为0时重新装货，如此循环。9元货物同理。</p>
<h2 id="状态转移图"><a class="header-anchor" href="#状态转移图">¶</a> 状态转移图</h2>
<p><img src="/2021/10/19/%E7%8A%B6%E6%80%81%E6%9C%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3/%E7%8A%B6%E6%80%81%E6%9C%BA.drawio.svg" alt="状态转移图"></p>
<h2 id="代码实现"><a class="header-anchor" href="#代码实现">¶</a> 代码实现</h2>
<figure class="highlight verilog"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">`<span class="meta-keyword">timescale</span> 1ns / 1ps</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> shopping_1(</span><br><span class="line">    <span class="keyword">input</span> clk,</span><br><span class="line">    <span class="keyword">input</span> rst_n,</span><br><span class="line">    <span class="keyword">input</span> [<span class="number">2</span>:<span class="number">0</span>] din,                           <span class="comment">// 投1元，5元</span></span><br><span class="line">    <span class="keyword">input</span> [<span class="number">2</span>:<span class="number">0</span>] choose,                        <span class="comment">// 货物选择 1：6元，2：9元</span></span><br><span class="line">    <span class="keyword">input</span> confirm,                             <span class="comment">// 选择后确认货物</span></span><br><span class="line">    <span class="keyword">input</span> reconfirm,                           <span class="comment">// 确认后可以重新选择</span></span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> dout,                           <span class="comment">// 出货</span></span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> [<span class="number">4</span>:<span class="number">0</span>] change,                   <span class="comment">// 找钱</span></span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> empty_6,                        <span class="comment">// 6元货物空信号</span></span><br><span class="line">    <span class="keyword">output</span> <span class="keyword">reg</span> empty_9                         <span class="comment">// 9元货物空信号</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">5</span>:<span class="number">0</span>] curr_state, next_state;</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">4</span>:<span class="number">0</span>] count                 ;              <span class="comment">// 当前总金额 </span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">6</span>:<span class="number">0</span>] goods_6               ;              <span class="comment">// 初始63</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">6</span>:<span class="number">0</span>] goods_9               ;              <span class="comment">// 初始63</span></span><br><span class="line"><span class="comment">// reg [6:0] goods_10              ;              // 初始63</span></span><br><span class="line"><span class="comment">// reg [6:0] goods_16              ;              // 初始63</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">7</span>:<span class="number">0</span>] time_cnt              ;              <span class="comment">// 计时60s</span></span><br><span class="line"><span class="keyword">reg</span> time_out                    ;              <span class="comment">// 时间计数完信号</span></span><br><span class="line"><span class="keyword">reg</span> time_begin                  ;              <span class="comment">// 时间开始计数信号</span></span><br><span class="line"><span class="keyword">reg</span> [<span class="number">4</span>:<span class="number">0</span>] temp                  ;              <span class="comment">// 存放每个商品的价格，找钱用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// -----------------------货物全局初始化-------------------------</span></span><br><span class="line"><span class="keyword">parameter</span> INIT   = <span class="number">11</span>              ;              <span class="comment">// 货物不够就初始化装货</span></span><br><span class="line"><span class="keyword">parameter</span> IDLE   = <span class="number">22</span>              ;              <span class="comment">// 选择货物</span></span><br><span class="line"><span class="comment">// ------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// -----------------------6元货物状态：-------------------------</span></span><br><span class="line"><span class="keyword">parameter</span> S6_0   = <span class="number">1</span>              ;              <span class="comment">// 支付过程</span></span><br><span class="line"><span class="keyword">parameter</span> S6_1   = <span class="number">2</span>              ;              <span class="comment">// 满足金额出货</span></span><br><span class="line"><span class="comment">// ------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// -----------------------9元货物状态：-------------------------</span></span><br><span class="line"><span class="keyword">parameter</span> S9_0   = <span class="number">3</span>              ;              <span class="comment">// 支付过程</span></span><br><span class="line"><span class="keyword">parameter</span> S9_1   = <span class="number">4</span>              ;              <span class="comment">// 满足金额出货</span></span><br><span class="line"><span class="comment">// ------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n)</span><br><span class="line">        curr_state &lt;= INIT;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        curr_state &lt;= next_state;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能: 计时60s</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span>        </span><br><span class="line">    <span class="keyword">if</span>(!rst_n)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            time_cnt &lt;= <span class="number">8'd0</span>;</span><br><span class="line">            time_out &lt;= <span class="number">8'd0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(next_state == IDLE)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            time_cnt &lt;= <span class="number">8'd0</span>;</span><br><span class="line">            time_out &lt;= <span class="number">8'd0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span> (time_begin == <span class="number">1'd1</span>)</span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    <span class="keyword">if</span> (time_cnt &gt;= <span class="number">8'd60</span>)</span><br><span class="line">                        <span class="keyword">begin</span></span><br><span class="line">                            time_cnt &lt;= <span class="number">8'd0</span>;</span><br><span class="line">                            time_out &lt;= <span class="number">1'd1</span>;</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">else</span> </span><br><span class="line">                        <span class="keyword">begin</span></span><br><span class="line">                            time_cnt &lt;= time_cnt + <span class="number">8'd1</span>;</span><br><span class="line">                            time_out &lt;= <span class="number">1'd0</span>;</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    time_cnt &lt;= <span class="number">8'd0</span>;</span><br><span class="line">                    time_out &lt;= <span class="number">8'd0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @功能: 描述状态转移，和一些信号的产生。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">always</span> @(*) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">case</span> (curr_state)</span><br><span class="line">        INIT:</span><br><span class="line">            <span class="keyword">begin</span></span><br><span class="line">                time_begin = <span class="number">1'b0</span>;</span><br><span class="line">                goods_6 = <span class="number">7'd10</span>;</span><br><span class="line">                goods_9 = <span class="number">7'd10</span>;</span><br><span class="line">                next_state = IDLE;</span><br><span class="line">                count = <span class="number">5'd0</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        IDLE:</span><br><span class="line">            <span class="keyword">if</span>(empty_6 == <span class="number">1'b1</span>)</span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    time_begin = <span class="number">1'b0</span>;</span><br><span class="line">                    goods_6 = <span class="number">7'd10</span>;</span><br><span class="line">                    next_state = INIT;</span><br><span class="line">                    count = <span class="number">5'd0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(empty_9 == <span class="number">1'b1</span>)</span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    time_begin = <span class="number">1'b0</span>;</span><br><span class="line">                    goods_9 = <span class="number">7'd10</span>;</span><br><span class="line">                    next_state = INIT;</span><br><span class="line">                    count = <span class="number">5'd0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    <span class="keyword">if</span>(choose == <span class="number">3'd1</span>)</span><br><span class="line">                        <span class="keyword">begin</span></span><br><span class="line">                            time_begin = <span class="number">1'b1</span>;</span><br><span class="line">                            goods_6 = goods_6;</span><br><span class="line">                            next_state = S6_0;</span><br><span class="line">                            count = <span class="number">5'd0</span>;</span><br><span class="line">                        <span class="keyword">end</span> </span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(choose == <span class="number">3'd2</span>)</span><br><span class="line">                        <span class="keyword">begin</span></span><br><span class="line">                            time_begin = <span class="number">1'b1</span>;</span><br><span class="line">                            goods_9 = goods_9;</span><br><span class="line">                            next_state = S9_0;</span><br><span class="line">                            count = <span class="number">5'd0</span>;</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        <span class="keyword">begin</span></span><br><span class="line">                            time_begin = <span class="number">1'b0</span>;</span><br><span class="line">                            goods_6 = goods_6;</span><br><span class="line">                            goods_9 = goods_9;</span><br><span class="line">                            next_state = IDLE;</span><br><span class="line">                            count = <span class="number">5'd0</span>;</span><br><span class="line">                        <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">        S6_0:</span><br><span class="line">            <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">if</span> (reconfirm == <span class="number">1'b1</span>)   <span class="comment">// 是否重新选择</span></span><br><span class="line">                    <span class="keyword">begin</span></span><br><span class="line">                        time_begin = <span class="number">0</span>;</span><br><span class="line">                        goods_6 = goods_6;</span><br><span class="line">                        count = <span class="number">5'd0</span>;</span><br><span class="line">                        next_state = IDLE;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    <span class="keyword">begin</span></span><br><span class="line">                        <span class="keyword">if</span> (time_out == <span class="number">1'b0</span>)</span><br><span class="line">                            <span class="keyword">begin</span></span><br><span class="line">                                <span class="keyword">if</span> (count &gt;= <span class="number">5'd6</span>)</span><br><span class="line">                                    <span class="keyword">begin</span></span><br><span class="line">                                        time_begin = <span class="number">1'b0</span>;</span><br><span class="line">                                        count = count;</span><br><span class="line">                                        goods_6 = goods_6 - <span class="number">7'd1</span>;</span><br><span class="line">                                        next_state = S6_1;</span><br><span class="line">                                    <span class="keyword">end</span></span><br><span class="line">                                <span class="keyword">else</span></span><br><span class="line">                                    <span class="keyword">begin</span></span><br><span class="line">                                        count = count + din;</span><br><span class="line">                                        time_begin = time_begin;</span><br><span class="line">                                        goods_6 = goods_6;</span><br><span class="line">                                        next_state = S6_0; </span><br><span class="line">                                    <span class="keyword">end</span></span><br><span class="line">                            <span class="keyword">end</span></span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            <span class="keyword">begin</span></span><br><span class="line">                                count = count;</span><br><span class="line">                                goods_6 = goods_6;</span><br><span class="line">                                time_begin = <span class="number">1'b0</span>;</span><br><span class="line">                                next_state = IDLE;</span><br><span class="line">                            <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        S6_1:</span><br><span class="line">            <span class="keyword">begin</span></span><br><span class="line">                count = count;</span><br><span class="line">                goods_6 = goods_6 - <span class="number">7'd1</span>;</span><br><span class="line">                goods_6 = goods_6;</span><br><span class="line">                next_state = IDLE;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        S9_0:</span><br><span class="line">            <span class="keyword">begin</span></span><br><span class="line">                <span class="keyword">if</span> (reconfirm == <span class="number">1'b1</span>)   <span class="comment">// 是否重新选择</span></span><br><span class="line">                    <span class="keyword">begin</span></span><br><span class="line">                        time_begin = <span class="number">0</span>;</span><br><span class="line">                        goods_9 = goods_9;</span><br><span class="line">                        count = <span class="number">5'd0</span>;</span><br><span class="line">                        next_state = IDLE;</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    <span class="keyword">begin</span></span><br><span class="line">                        <span class="keyword">if</span> (time_out == <span class="number">1'b0</span>)</span><br><span class="line">                            <span class="keyword">begin</span></span><br><span class="line">                                <span class="keyword">if</span> (count &gt;= <span class="number">5'd9</span>)</span><br><span class="line">                                    <span class="keyword">begin</span></span><br><span class="line">                                        time_begin = <span class="number">1'b0</span>;</span><br><span class="line">                                        count = count;</span><br><span class="line">                                        goods_9 = goods_9 - <span class="number">7'd1</span>;</span><br><span class="line">                                        next_state = S9_1;</span><br><span class="line">                                    <span class="keyword">end</span></span><br><span class="line">                                <span class="keyword">else</span></span><br><span class="line">                                    <span class="keyword">begin</span></span><br><span class="line">                                        count = count + din;</span><br><span class="line">                                        time_begin = time_begin;</span><br><span class="line">                                        goods_6 = goods_6;</span><br><span class="line">                                        next_state = S9_0; </span><br><span class="line">                                    <span class="keyword">end</span></span><br><span class="line">                            <span class="keyword">end</span></span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            <span class="keyword">begin</span></span><br><span class="line">                                count = count;</span><br><span class="line">                                goods_9 = goods_9;</span><br><span class="line">                                time_begin = <span class="number">1'b0</span>;</span><br><span class="line">                                next_state = IDLE;</span><br><span class="line">                            <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        S9_1:</span><br><span class="line">            <span class="keyword">begin</span></span><br><span class="line">                count = count;</span><br><span class="line">                goods_9 = goods_9 - <span class="number">7'd1</span>;</span><br><span class="line">                goods_9 = goods_9;</span><br><span class="line">                next_state = IDLE;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">default</span>: ;</span><br><span class="line">    <span class="keyword">endcase</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n)</span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            dout &lt;= <span class="number">1'b0</span>;</span><br><span class="line">            change &lt;= <span class="number">5'd0</span>;</span><br><span class="line">            empty_6 &lt;= <span class="number">1'b0</span>;</span><br><span class="line">            empty_9 &lt;= <span class="number">1'b0</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">begin</span></span><br><span class="line">            <span class="keyword">if</span>(curr_state == S6_0 &amp;&amp; time_out == <span class="number">1'b1</span> &amp;&amp; curr_state == S9_0)</span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    change &lt;= count;</span><br><span class="line">                    dout &lt;= <span class="number">1'b0</span>;</span><br><span class="line">                    empty_6 &lt;= <span class="number">1'b0</span>;</span><br><span class="line">                    empty_9 &lt;= <span class="number">1'b0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(curr_state == S6_1)</span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    change &lt;= count - <span class="number">5'd6</span>;</span><br><span class="line">                    dout &lt;= <span class="number">1'b1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(goods_6 &lt;= <span class="number">7'd0</span>)</span><br><span class="line">                        empty_6 &lt;= <span class="number">1'b1</span>;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        empty_6 &lt;= <span class="number">1'b0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(curr_state == S9_1)</span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    change &lt;= count - <span class="number">5'd9</span>;</span><br><span class="line">                    dout &lt;= <span class="number">1'b1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(goods_9 &lt;= <span class="number">7'd0</span>)</span><br><span class="line">                        empty_9 &lt;= <span class="number">1'b1</span>;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        empty_9 &lt;= <span class="number">1'b0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">begin</span></span><br><span class="line">                    change &lt;= <span class="number">5'd0</span>;</span><br><span class="line">                    dout &lt;= <span class="number">1'b0</span>;</span><br><span class="line">                    empty_6 &lt;= <span class="number">1'b0</span>;</span><br><span class="line">                    empty_9 &lt;= <span class="number">1'b0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></tbody></table></figure>
<p>testbench文件：</p>
<figure class="highlight verilog"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">`<span class="meta-keyword">timescale</span>  1ns / 1ps</span></span><br><span class="line"><span class="comment">//~ `New testbench </span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">choose 的时序还没有调整</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">module</span> tb_shopping_1;</span><br><span class="line"></span><br><span class="line"><span class="comment">// shopping_1 Parameters</span></span><br><span class="line"><span class="keyword">parameter</span> PERIOD = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">parameter</span> INIT  = <span class="number">11</span>;</span><br><span class="line"><span class="keyword">parameter</span> IDLE  = <span class="number">22</span>;</span><br><span class="line"><span class="keyword">parameter</span> S6_0  = <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">parameter</span> S6_1  = <span class="number">2</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">// shopping_1 Inputs</span></span><br><span class="line"><span class="keyword">reg</span>   clk                                           = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">reg</span>   rst_n                                         = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">reg</span>   [<span class="number">2</span>:<span class="number">0</span>]  din                                    = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">reg</span>   [<span class="number">2</span>:<span class="number">0</span>]  choose                                 = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">reg</span>   confirm                                       = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">reg</span>   reconfirm                                     = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">reg</span>   [<span class="number">10</span>:<span class="number">0</span>] count ,data_out                        = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">// shopping_1 Outputs</span></span><br><span class="line"><span class="keyword">wire</span>  dout                                 ;</span><br><span class="line"><span class="keyword">wire</span>  [<span class="number">4</span>:<span class="number">0</span>]  change                        ;</span><br><span class="line"><span class="keyword">wire</span>  empty_6                              ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">integer</span> i, fp, data, file_wr, fp1, data_choose, j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">forever</span> <span class="variable">#(PERIOD/2)</span>  clk=~clk;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">initial</span> <span class="keyword">begin</span></span><br><span class="line">    <span class="variable">#(PERIOD*2)</span> rst_n  =  <span class="number">1</span>;</span><br><span class="line">    file_wr = <span class="built_in">$fopen</span>(<span class="string">"C:/Users/.../change.txt"</span>,<span class="string">"w"</span>);</span><br><span class="line">    fp = <span class="built_in">$fopen</span>(<span class="string">"C:/Users/.../money.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">    fp1 = <span class="built_in">$fopen</span>(<span class="string">"C:/Users/.../choose.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">    <span class="variable">#(PERIOD*10000)</span>;</span><br><span class="line">    <span class="built_in">$fclose</span>(fp);</span><br><span class="line">    <span class="built_in">$fclose</span>(fp1);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @ (<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n)<span class="keyword">begin</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!rst_n)<span class="keyword">begin</span></span><br><span class="line">        choose &lt;= <span class="number">0</span>;</span><br><span class="line">        data_choose &lt;= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>; fp!=<span class="string">"\0"</span>;i=i+<span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">            <span class="variable">#(PERIOD)</span>;</span><br><span class="line">            <span class="built_in">$fscanf</span>(fp, <span class="string">"%d"</span>, data);</span><br><span class="line">            din &lt;= data;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @ (<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n)<span class="keyword">begin</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!rst_n)<span class="keyword">begin</span></span><br><span class="line">        choose &lt;= <span class="number">0</span>;</span><br><span class="line">        data_choose &lt;= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">for</span> (j=<span class="number">0</span>; fp1!=<span class="string">"\0"</span>;j=j+<span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">            <span class="variable">#(PERIOD)</span>;</span><br><span class="line">            <span class="built_in">$fscanf</span>(fp1, <span class="string">"%d"</span>, data_choose);</span><br><span class="line">            choose &lt;= data_choose;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span> @ (<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n)<span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">if</span>(!rst_n)<span class="keyword">begin</span></span><br><span class="line">        data_out&lt;=<span class="number">8'b0</span>;</span><br><span class="line">        count&lt;=<span class="number">11'b0</span>;</span><br><span class="line">        choose &lt;= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(count&lt;<span class="number">11'd100</span>) <span class="keyword">begin</span></span><br><span class="line">        data_out&lt;=change;</span><br><span class="line">        count&lt;=count+<span class="number">1'b1</span>;</span><br><span class="line">        <span class="built_in">$fdisplay</span>(file_wr,<span class="string">"%d"</span>,change);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="built_in">$fclose</span>(file_wr);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">shopping_1 #(</span><br><span class="line">    <span class="variable">.INIT</span> ( INIT ),</span><br><span class="line">    <span class="variable">.IDLE</span> ( IDLE ),</span><br><span class="line">    <span class="variable">.S6_0</span> ( S6_0 ),</span><br><span class="line">    <span class="variable">.S6_1</span> ( S6_1 ))</span><br><span class="line"> u_shopping_1 (</span><br><span class="line">    <span class="variable">.clk</span>                     ( clk              ),</span><br><span class="line">    <span class="variable">.rst_n</span>                   ( rst_n            ),</span><br><span class="line">    <span class="variable">.din</span>                     ( din        [<span class="number">2</span>:<span class="number">0</span>] ),</span><br><span class="line">    <span class="variable">.choose</span>                  ( choose     [<span class="number">2</span>:<span class="number">0</span>] ),</span><br><span class="line">    <span class="variable">.confirm</span>                 ( confirm          ),</span><br><span class="line">    <span class="variable">.reconfirm</span>               ( reconfirm        ),</span><br><span class="line"></span><br><span class="line">    <span class="variable">.dout</span>                    ( dout             ),</span><br><span class="line">    <span class="variable">.change</span>                  ( change     [<span class="number">4</span>:<span class="number">0</span>] ),</span><br><span class="line">    <span class="variable">.empty_6</span>                 ( empty_6          )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">endmodule</span>  </span><br></pre></td></tr></tbody></table></figure>
<p><img src="/2021/10/19/%E7%8A%B6%E6%80%81%E6%9C%BA%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3/%E4%BB%BF%E7%9C%9F.png" alt="仿真结果"></p>
<p><a href="data.zip">点击下载仿真数据</a></p>
<p>仿真中choose信号的到来还未调整，但是功能是正常的。</p>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
      <categories>
        <category>FPGA</category>
        <category>Verilog</category>
      </categories>
      <tags>
        <tag>状态机</tag>
      </tags>
  </entry>
</search>
